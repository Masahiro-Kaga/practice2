172-174

  データベース、APIとReactの連携方法や関係性の説明。


175

  実現したいことと手順。
  概要：非同期通信を機能させるために、同期処理でデータを順に処理していく。ボタンを押したら、APIからデータを抽出し、ダミーデータの形をもとに置き換える。

  ※色んなサイトには説明に「asyncで非同期処理云々」と書いてあるけど、実際、中で順序よく処理させるためにawaitとか使ってるんじゃん、じゃあ同期処理じゃん。っていう解釈をしていたけど、多分asyncで非同期処理っていうのは、fetchMoviesHandler自体を、その他のコードと別に分けて実行するから、他コードには影響がないよっていう意味で非同期処理と言っているっぽい。

  なお、thenで繋ぐのをPromiseと言う。

  https://swapi.dev/api/films
  １　スターウォーズAPIにアクセスしてデータgetする。非同期通信（Ajax）方法は、fetch関数を使用。
  ２　既にあるダミーデータを削除。
  ３　URLでフェッチ
  ４　thenで全jsonデータ取得、それをthenでさらに抽出するが配列になってるので、mapで必要なデータのみ抽出、全てオブジェクト形式。
  ５　その抽出データをuseStateで変数に入れる。
  ６　ダミーデータをそのフェッチしたデータに置き換えるための処理をする。

  注目ポイント１
  　fetch()は、デフォルトでgetの役割を果たすらしい。
  注目ポイント２
    大元の持ってきたデータを、Appに格納するのか、MoviesListに格納するのか、そしてどこまで各コンポーネントでフォーマットを整えるのか、判断が重要になる。


176

  async/await　を使うパターン。
  書き換えてみよう。


177

　ローディングしてる時に、Loading...を表示させる。また、データがゼロの時（該当する映画が無いとき、とボタンを押す前）Found no moviesを表示させる。
  これは、ファンクションの中で順を追って色々実行されるため、コードの順番を気をつけていれば作れる。


178

  fetch後のエラーを処理する　＆　フェッチ後の結果をletで変数化。
  
　トライして、エラーを投げたり、キャッチしたりの処理。
　catch (error)　のerrorは、
  const [error, setError] = useState(null);　のerrorではなく、
  try　のthrowで投げられたエラーのエブジェクトが入ってる。だから別にcatch(wrong)とか違う言葉でもいい。

  if(error)は、初期値がnull（falseと一緒）だから、もしここに普通の変数（error.message）が入ればtrueになる。

  　